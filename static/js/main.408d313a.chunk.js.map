{"version":3,"sources":["components/counter.jsx","components/navbar.jsx","App.js","components/counters.jsx","serviceWorker.js","index.js"],"names":["Counter","Component","_this","this","react_default","a","createElement","className","getBadgeClasses","formatCount","onClick","props","onIncrement","counter","onDelete","id","classes","value","App","state","milkItem","quantity","Fat","SNF","milkData","handleOnchange","e","setState","Object","objectSpread","defineProperty","target","name","console","log","handleAddMilkItem","_this$state","push","alert","getMilkTotal","reduce","total","item","Number","getTotalMilkFat","toFixed","getTotalMilkSNF","getAvrageFat","totalFat","totalMilk","getAvrageSNF","totalSNF","handleDelete","selectedIndex","newMilkData","filter","index","_this2","_this$state$milkItem","Fragment","type","onChange","bind","scope","map","class","length","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.408d313a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-sm\"\r\n        >\r\n          Increment\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Navbar{\" \"}\r\n          <span className=\"badge badge-pill badge\">\r\n            {this.props.totalCounters}\r\n          </span>\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\n\nclass App extends Component {\n  state = {\n    milkItem: { quantity: 0, Fat: 0, SNF: 0 },\n    milkData: [],\n  };\n\n  handleOnchange = (e) => {\n    const { milkItem } = this.state;\n    this.setState({\n      milkItem: { ...milkItem, [e.target.name]: e.target.value },\n    });\n    console.log(this.state, \"state\");\n  };\n\n  handleAddMilkItem = () => {\n    const { milkData, milkItem } = this.state;\n\n    if (milkItem.Fat && milkItem.SNF && milkItem.quantity) {\n      milkData.push(milkItem);\n      let emptyMilkItem = { quantity: 0, Fat: 0, SNF: 0 };\n\n      this.setState({\n        milkData,\n        milkItem: emptyMilkItem,\n      });\n    } else alert(\"Fill all details\");\n  };\n\n  getMilkTotal = () => {\n    const { milkData } = this.state;\n\n    return milkData.reduce((total, item) => {\n      return Number(total) + Number(item.quantity);\n    }, 0);\n  };\n\n  getTotalMilkFat = () => {\n    const { milkData } = this.state;\n\n    let totalMilkFat = milkData.reduce((total, item) => {\n      return Number(total) + Number(item.quantity * item.Fat);\n    }, 0);\n\n    return totalMilkFat.toFixed(2);\n  };\n\n  getTotalMilkSNF = () => {\n    const { milkData } = this.state;\n    let totalMilkSNF = milkData.reduce((total, item) => {\n      return Number(total) + Number(item.quantity * item.SNF);\n    }, 0);\n    return totalMilkSNF.toFixed(2);\n  };\n\n  getAvrageFat = () => {\n    const totalFat = this.getTotalMilkFat();\n    const totalMilk = this.getMilkTotal();\n    let avrageFat = Number(totalFat) / Number(totalMilk);\n    return avrageFat.toFixed(2);\n  };\n\n  getAvrageSNF = () => {\n    const totalSNF = this.getTotalMilkSNF();\n    const totalMilk = this.getMilkTotal();\n    let avrageSNF = Number(totalSNF) / Number(totalMilk);\n    return avrageSNF.toFixed(2);\n  };\n\n  handleDelete = (selectedIndex) => {\n    const { milkData } = this.state;\n    let newMilkData = milkData.filter((item, index) => index != selectedIndex);\n    this.setState({ milkData: newMilkData });\n  };\n\n  render() {\n    const { quantity, Fat, SNF } = this.state.milkItem;\n    return (\n      <React.Fragment>\n        <main className=\"container\">\n          <section>\n            <table className=\"table table-hover\">\n              <thead>\n                <tr>\n                  <th>Milk</th>\n                  <th>Fat</th>\n                  <th>SNF</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <input\n                      type=\"number\"\n                      name=\"quantity\"\n                      value={quantity}\n                      className=\"form-control\"\n                      onChange={this.handleOnchange.bind(this)}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"number\"\n                      value={Fat}\n                      name=\"Fat\"\n                      onChange={this.handleOnchange.bind(this)}\n                      className=\"form-control\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"number\"\n                      name=\"SNF\"\n                      onChange={this.handleOnchange.bind(this)}\n                      value={SNF}\n                      className=\"form-control\"\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <button\n                      type=\"submit\"\n                      onClick={this.handleAddMilkItem.bind(this)}\n                      className=\"btn btn-primary\"\n                    >\n                      Add item\n                    </button>\n                  </td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              </tbody>\n            </table>\n          </section>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Milk </th>\n                <th scope=\"col\">Fat</th>\n                <th scope=\"col\">SNF</th>\n                <th scope=\"col\">Milk * Fat</th>\n                <th scope=\"col\">Milk * SNF</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.milkData.map((item, index) => {\n                return (\n                  <tr>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{item.quantity}</td>\n                    <td>{item.Fat}</td>\n                    <td>{item.SNF}</td>\n                    <td>{(item.quantity * item.Fat).toFixed(2)}</td>\n                    <td>{(item.quantity * item.SNF).toFixed(2)}</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-danger\"\n                        onClick={() => this.handleDelete(index)}\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n              <th scope=\"row\">Total</th>\n              <td>{this.getMilkTotal()}</td>\n              <td>-</td>\n              <td>-</td>\n              <td>{this.getTotalMilkFat()}</td>\n              <td>{this.getTotalMilkSNF()}</td>\n            </tbody>\n          </table>\n          Avarage Fat ={this.state.milkData.length > 0 && this.getAvrageFat()}\n          <br />\n          Avarage SNF ={this.state.milkData.length > 0 && this.getAvrageSNF()}\n          <br />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    const { onReset, counters, onDelete, onIncrement } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"btn btn-primary btn-sm m-2\" onClick={onReset}>\r\n          Reset\r\n        </button>\r\n        {counters.map(counter => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={onDelete}\r\n            onIncrement={onIncrement}\r\n            counter={counter}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n"],"sourceRoot":""}